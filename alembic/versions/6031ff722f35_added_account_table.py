"""Added account table

Revision ID: 6031ff722f35
Revises: b74f1d06296a
Create Date: 2022-11-06 10:17:04.413358

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6031ff722f35'
down_revision = 'b74f1d06296a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('editors',
    sa.Column('note_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('note_id', 'user_id')
    )
    op.drop_table('stats')
    op.drop_table('allowed_notes')
    op.add_column('notes', sa.Column('isPublic', sa.BOOLEAN(), nullable=False))
    op.add_column('notes', sa.Column('dateOfEditing', sa.DateTime(), nullable=False))
    op.create_unique_constraint(None, 'notes', ['owner_id'])
    op.drop_column('notes', 'ispublic')
    op.drop_column('notes', 'dateofediting')
    op.add_column('tags', sa.Column('name', sa.String(), nullable=False))
    op.drop_column('tags', 'text')
    op.add_column('users', sa.Column('numOfNotes', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('numOfEditingNotes', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('dateOfCreating', sa.DateTime(), nullable=False))
    op.create_unique_constraint(None, 'users', ['email'])
    op.create_unique_constraint(None, 'users', ['username'])
    op.drop_column('users', 'userstatus')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('userstatus', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'dateOfCreating')
    op.drop_column('users', 'numOfEditingNotes')
    op.drop_column('users', 'numOfNotes')
    op.add_column('tags', sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('tags', 'name')
    op.add_column('notes', sa.Column('dateofediting', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('notes', sa.Column('ispublic', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'notes', type_='unique')
    op.drop_column('notes', 'dateOfEditing')
    op.drop_column('notes', 'isPublic')
    op.create_table('allowed_notes',
    sa.Column('note_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], name='allowed_notes_note_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='allowed_notes_user_id_fkey'),
    sa.PrimaryKeyConstraint('note_id', 'user_id', name='allowed_notes_pkey')
    )
    op.create_table('stats',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('numofnotes', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('numofeditingnotes', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('dateofcreating', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='stats_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stats_pkey')
    )
    op.drop_table('editors')
    # ### end Alembic commands ###
